#!/usr/bin/python

import gobject

import sys
import dbus
import dbus.service
import dbus.mainloop.glib
import os.path
from optparse import OptionParser

class Agent(dbus.service.Object):
    def __init__(self, conn=None, obj_path=None, verbose=False):
        dbus.service.Object.__init__(self, conn, obj_path)
        self.verbose = verbose

    @dbus.service.method("org.openobex.Agent",
                    in_signature="o", out_signature="s")
    def Request(self, path):
        return ""

    @dbus.service.method("org.openobex.Agent",
                    in_signature="ot", out_signature="")
    def Progress(self, path, transferred):
        if self.verbose:
            print "Transfer progress (%d bytes)" % (transferred)
        return

    @dbus.service.method("org.openobex.Agent",
                    in_signature="o", out_signature="")
    def Complete(self, path):
        if self.verbose:
            print "Transfer finished"
        mainloop.quit()

    @dbus.service.method("org.openobex.Agent",
                    in_signature="os", out_signature="")
    def Error(self, path, error):
        print "Transfer finished with an error: %s" % (error)
        mainloop.quit()

    @dbus.service.method("org.openobex.Agent",
                    in_signature="", out_signature="")
    def Release(self):
        mainloop.quit()

def parse_options():
    parser.add_option("-d", "--device", dest="device",
                      help="Device to connect", metavar="DEVICE")
    parser.add_option("-p", "--push", action="append", dest="image_file",
                      help="Push image", metavar="FILE")
    parser.add_option("-c", "--capabilities", action="store_true", dest="imaging_capabilities",
                      help="Get imaging capabilities")
    parser.add_option("-v", "--verbose", action="store_true", dest="verbose")

    return parser.parse_args()

L = []
cur = 0
bip = None

def image_push(session, filename):
    session.PutImage(os.path.abspath(filename))

def imaging_capabilities(session):
    print session.GetImagingCapabilities()

def image_push_completed(handle, thumbnail):
    global L, cur, bip
    print "Image pushed, received handle: "+handle
    print "Is thumbnail requested? "+str(thumbnail)
    cur+=1
    print cur
    print L[cur]
    print bip
    image_push(bip, L[cur])

def image_push_failed(reason):
    print "Image push failed, reason: "+reason

if  __name__ == '__main__':

    dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)

    parser = OptionParser()

    (options, args) = parse_options()

    if not options.device:
        parser.print_help()
        sys.exit(0)

    bus = dbus.SessionBus()
    mainloop = gobject.MainLoop()

    path = "/test/agent"
    agent = Agent(bus, path, options.verbose)
	
    bus.add_signal_receiver(image_push_completed,
								dbus_interface="org.openobex.ImagePush",
								signal_name="PutImageCompleted")
    
    bus.add_signal_receiver(image_push_failed,
								dbus_interface="org.openobex.ImagePush",
								signal_name="PutImageFailed")

    client = dbus.Interface(bus.get_object("org.openobex.client", "/"),
                            "org.openobex.Client")

    session_path = client.CreateSession({ "Destination": options.device,
        "Target": "BIP:PUSH"})

    session = dbus.Interface(bus.get_object("org.openobex.client", session_path),
                 "org.openobex.Session")

    session.AssignAgent(path)

    bip = dbus.Interface(bus.get_object("org.openobex.client", session_path),
                 "org.openobex.ImagePush")

    L = options.image_file
    if options.image_file:
       print options.image_file[0]
       image_push(bip, options.image_file[0])
    if options.capabilities:
       print "capabilities"
       imaging_capabilities()

    mainloop.run()
