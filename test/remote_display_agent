#!/usr/bin/python

import gobject

import sys
import dbus
import dbus.service
import dbus.mainloop.glib
import os.path
import time
import subprocess
from optparse import OptionParser

class Agent(dbus.service.Object):
    def __init__(self, conn=None, obj_path=None):
        dbus.service.Object.__init__(self, conn, obj_path)
        self.okular = subprocess.Popen(["okular"])
        self.iface = dbus.Interface(bus.get_object("org.kde.okular-"+str(self.okular.pid), "/okular"), "org.kde.okular")

    @dbus.service.method("org.openobex.DisplayImage",
                    in_signature="su", out_signature="")
    def DisplayImage(self, path, id):
        print "Display Image: path = " + str(path) + ", id = " + str(id)
        iface.openDocument(path)
        return

tasks = []

if  __name__ == '__main__':

    dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)

    bus = dbus.SessionBus()
    mainloop = gobject.MainLoop()

    path = "/test/rdagent"
    agent = Agent(bus, path)
	
    obexd = dbus.Interface(bus.get_object("org.openobex.RDManager",
                            "/rdmanager"), "org.openobex.RDManager.RDManager")

    session_path = obexd.RegisterAgent(path)

    mainloop.run()
